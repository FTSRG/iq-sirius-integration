package org.eclipse.incquery.viewmodel.configuration.patterns

import "http://org.eclipse.incquery/viewmodel/configuration/1.0"
import "http://www.eclipse.org/emf/2002/Ecore"


@QueryBasedFeature(feature = "name")
pattern namedElement_name(This : NamedElement, Target) {
	ElementRuleDescriptor.id(This, id);
	ElementRuleDescriptor.elementType.name(This, name);
	
	Target == eval (name + "(" + id + ")");
} or {
	ReferenceRuleDescriptor.ownerElementRuleDescriptor.name(This, fromName);
	ReferenceRuleDescriptor.targetElementRuleDescriptor.name(This, toName);
	ReferenceRuleDescriptor.reference.name(This, refName);
	
	Target == eval(fromName + ":" + refName + "->" + toName);
} or { 
	AttributeRuleDescriptor.ownerElementRuleDescriptor.name(This, ownerName);
	AttributeRuleDescriptor.attribute.name(This, attrName);
	
	Target == eval(ownerName + ":" + attrName);
} or {
	PatternParameterMapping.structuralFeatureRuleDescriptor.name(This, ownerName);
	PatternParameterMapping.sfRulePatternParameterName(This, sfRulePatternParameterName);
	PatternParameterMapping.eRulePatternParameterName(This, eRulePatternParameterName);
	
	Target == eval(ownerName + ":" + sfRulePatternParameterName + "->" + eRulePatternParameterName);
} or {
	HiddenParametersRuleDescriptor.originalPatternFQN(This, originalPatternFQN);
	
	Target == eval("HiddenParametersRuleDescriptor->" + originalPatternFQN);
}

@QueryBasedFeature(feature = "transformationRuleDescriptors")
pattern configuration_transformationRuleDescriptors(This : Configuration, Target : TransformationRuleDescriptor) {
	Configuration.ruleDescriptors(This, Target);
	TransformationRuleDescriptor(Target);
}

@QueryBasedFeature(feature = "traceabilityRuleDescriptors")
pattern configuration_traceabilityRuleDescriptors(This : Configuration, Target : TraceabilityRuleDescriptor) {
	Configuration.ruleDescriptors(This, Target);
	TraceabilityRuleDescriptor(Target);
}

@QueryBasedFeature(feature = "elementRuleDescriptors")
pattern configuration_elementRuleDescriptors(This : Configuration, Target : ElementRuleDescriptor) {
	Configuration.ruleDescriptors(This, Target);
	ElementRuleDescriptor(Target);
}

@QueryBasedFeature(feature = "structuralFeatureRuleDescriptors")
pattern configuration_structuralFeatureRuleDescriptors(This : Configuration, Target : StructuralFeatureRuleDescriptor) {
	Configuration.ruleDescriptors(This, Target);
	StructuralFeatureRuleDescriptor(Target);
}

@QueryBasedFeature(feature = "referenceRuleDescriptors")
pattern configuration_referenceRuleDescriptors(This : Configuration, Target : ReferenceRuleDescriptor) {
	Configuration.ruleDescriptors(This, Target);
	ReferenceRuleDescriptor(Target);
}

@QueryBasedFeature(feature = "attributeRuleDescriptors")
pattern configuration_attributeRuleDescriptors(This : Configuration, Target : AttributeRuleDescriptor) {
	Configuration.ruleDescriptors(This, Target);
	AttributeRuleDescriptor(Target);
}

@QueryBasedFeature(feature = "referenceRuleDescriptors")
pattern elementRule_referenceRuleDescriptors(This : ElementRuleDescriptor, Target : ReferenceRuleDescriptor) {
	ElementRuleDescriptor.structuralFeatureRuleDescriptors(This, Target);
	ReferenceRuleDescriptor(Target);
}

@QueryBasedFeature(feature = "attributeRuleDescriptors")
pattern elementRule_attributeRuleDescriptors(This : ElementRuleDescriptor, Target : AttributeRuleDescriptor) {
	ElementRuleDescriptor.structuralFeatureRuleDescriptors(This, Target);
	AttributeRuleDescriptor(Target);
}

@QueryBasedFeature(feature = "hiddenParametersRuleDescriptors")
pattern configuration_hiddenParametersRuleDescriptors(This : Configuration, Target : HiddenParametersRuleDescriptor) {
	Configuration.ruleDescriptors(This, Target);
	HiddenParametersRuleDescriptor(Target);
}

@QueryBasedFeature(feature = "transformationRuleDescriptors")
pattern hiddenParametersRuleDescriptors_transformationRuleDescriptors(This : HiddenParametersRuleDescriptor, Target : TransformationRuleDescriptor) {
	HiddenParametersRuleDescriptor.configuration.transformationRuleDescriptors(This, Target);
	TransformationRuleDescriptor.patternFQN(Target, patternFQN);
	HiddenParametersRuleDescriptor.originalPatternFQN(This, patternFQN);
}