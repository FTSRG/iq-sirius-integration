package hu.bme.mit.concerto.telecare.example.tdk.view.design.patterns

import "http://hu.bme.mit.inf.concerto/telecare/example/tdk/1.0"


pattern element_viewModel(telecareSystem : TelecareSystem) {
	TelecareSystem(telecareSystem);
}

pattern element_server(host : Host) {
	TelecareSystem.gateways(_, gateway);

	Gateway.triggers(gateway, ect);

	EventCompletedTrigger(ect);	
	EventCompletedTrigger.triggeredEvents(ect, re);
	ReportingEvent.address(re, host);
}

pattern element_trigger(trigger : FixedIntervalTrigger) {
	FixedIntervalTrigger.triggeredEvents(trigger, measurementEvent);
	Measurement(measurementEvent);
	
	EventCompletedTrigger.triggeredBy(ecTrigger, measurementEvent);
	EventCompletedTrigger.triggeredEvents(ecTrigger, reportingEvent);
	
	ReportingEvent(reportingEvent);
}

pattern element_sensor(sensor : Sensor) {
	Sensor.connectedTo(sensor, gateway);
	
	Gateway.triggers(gateway, ect);
	Gateway.triggers(gateway, fit);
	
	EventCompletedTrigger.triggeredEvents(ect, re);
	ReportingEvent.address(re, _);
	
	FixedIntervalTrigger.triggeredEvents(fit, measurement);
	EventCompletedTrigger.triggeredBy(ect, measurement);
	Measurement.measurementType.sensor(measurement, sensor);
}
